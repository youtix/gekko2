name: CI

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 20

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check commit messages
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if git rev-parse HEAD~10 >/dev/null 2>&1; then
            FROM="HEAD~10"
          else
            FROM=$(git rev-list --max-parents=0 HEAD)
          fi
          bunx commitlint --from="$FROM"

      - name: Check formatting
        run: bun run format:check

      - name: Lint
        run: bun run lint:check

      - name: Type check
        run: bun run type:check

      - name: Test with coverage
        run: bun run test:coverage

      - name: Build
        run: bun run build:exec

      - name: Release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bun run release
